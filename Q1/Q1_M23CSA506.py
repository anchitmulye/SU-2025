# -*- coding: utf-8 -*-
"""question1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xeeWckaT9EAeuTRbOSSn1puUh9lw6ljd

# Speech Understanding
## Assignment 1
#### Question 1
### Akansha Gautam (M23CSA506)

# Importing Libraries
"""

import numpy as np
import pandas as pd
import torch
import seaborn as sns
import matplotlib.pyplot as plt
from scipy.io import wavfile as wav
import IPython.display as ipd
import librosa.display
import torchaudio
import torchaudio.transforms as transforms
import requests
import csv
import jiwer

pd.set_option('display.max_colwidth', None)

"""# Set Device"""

if torch.backends.mps.is_available():
    device = 'mps'
elif torch.cuda.is_available():
    device = 'cuda'
else:
    device = 'cpu'

print(f"Using device: {device}")

"""## Load the LJ Speech Dataset"""

# https://www.kaggle.com/datasets/mathurinache/the-lj-speech-dataset

column_names = ["file_name", "transcription", "normalized_transcription"]
metadata = pd.read_csv('/Users/anchitmulye/Documents/IITJ/CodingIIT/SU/SU-2025/Q1/LJSpeech-1.1/metadata.csv',
                       delimiter='|', names=column_names)
metadata['file_path'] = '/Users/anchitmulye/Documents/IITJ/CodingIIT/SU/SU-2025/Q1/LJSpeech-1.1/wavs/' + metadata.file_name.astype(str) + '.wav'

metadata.head()

API_KEY = "4109d1c8defd962ff4bc6dda9e1ca0b1cb66e9e4"
MAX_METADATA_FILES = 1000

url = "https://api.deepgram.com/v1/listen?model=whisper&smart_format=true"

headers = {
    "Authorization": f"Token {API_KEY}",
    "Content-Type": "audio/wav"
}

nova_2_transcripts = []

for i in range(MAX_METADATA_FILES):
    file_path = metadata.iloc[i]['file_path']
    with open(file_path, "rb") as audio_file:
        response = requests.post(url, headers=headers, data=audio_file).json()
        transcript = response['results']['channels'][0]['alternatives'][0]['transcript']
    nova_2_transcripts.append(transcript)
    print(f"iteration i: {i} | transcript: {transcript}")
    print()

def write_list_to_csv(data_list, file_name):
    with open(file_name, mode='w', newline='') as file:
        writer = csv.writer(file)
        for item in data_list:
            writer.writerow([item])

write_list_to_csv(nova_2_transcripts, 'nova-2-transcripts.csv')

nova_transcripts = pd.read_csv('/Users/akanshagautam/Documents/MTech/Speech Understanding/Assignment 1/nova-2-transcripts.csv', names=['generated_transcription'])
nova_transcripts.head(3)

def calculate_wer(original_transcriptions, generated_transcriptions):
    wer_scores = []

    for i in range(len(generated_transcriptions)):
        wer = jiwer.wer(original_transcriptions[i], generated_transcriptions[i])
        wer_scores.append(wer)

    return sum(wer_scores) / len(wer_scores) if wer_scores else 0

wer_result = calculate_wer(metadata["transcription"], nova_transcripts['generated_transcription'])
print(f"Average WER: {wer_result:.2%}")